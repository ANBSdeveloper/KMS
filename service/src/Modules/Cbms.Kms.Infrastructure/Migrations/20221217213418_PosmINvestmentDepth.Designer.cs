// <auto-generated />
using System;
using Cbms.Kms.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cbms.Kms.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221217213418_PosmINvestmentDepth")]
    partial class PosmINvestmentDepth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.app_setting_seq", "'app_setting_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.area_seq", "'area_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.branch_seq", "'branch_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.brand_seq", "'brand_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.budget_area_seq", "'budget_area_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.budget_branch_seq", "'budget_branch_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.budget_seq", "'budget_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.budget_zone_seq", "'budget_zone_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.channel_seq", "'channel_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.consumer_seq", "'consumer_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.customer_location_seq", "'customer_location_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.customer_sale_seq", "'customer_sale_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.customer_sales_item_seq", "'customer_sales_item_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.customer_seq", "'customer_seq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.cycle_seq", "'cycle_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.district_seq", "'district_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.investment_branch_setting_seq", "'investment_branch_setting_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.investmentSetting_seq", "'investmentSetting_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.material_seq", "'material_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.material_type_seq", "'material_type_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.notification_branch_seq", "'notification_branch_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.notification_seq", "'notification_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.notification_user_seq", "'notification_user_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.order_detail_seq", "'order_detail_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.order_seq", "'order_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.order_ticket_seq", "'order_ticket_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.permission_seq", "'permission_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_catalog_seq", "'posm_catalog_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_class_seq", "'posm_class_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_investment_item_history_seq", "'posm_investment_item_history_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_investment_item_seq", "'posm_investment_item_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_investment_seq", "'posm_investment_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_item_seq", "'posm_item_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_price_detail", "'posm_price_detail', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_price_header_seq", "'posm_price_header_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.posm_sales_commitment_seq", "'posm_sales_commitment_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.product_class_seq", "'product_class_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.product_point_seq", "'product_point_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.product_seq", "'product_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.product_unit_seq", "'product_unit_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.province_seq", "'province_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.reward_branch_seq", "'reward_branch_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.reward_item_seq", "'reward_item_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.reward_package_seq", "'reward_package_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.role_permission_seq", "'role_permission_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.role_seq", "'role_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.staff_seq", "'staff_seq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.sub_product_class_seq", "'sub_product_class_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_acceptance_seq", "'ticket_acceptance_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_customer_reward_detail_seq", "'ticket_customer_reward_detail_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_customer_reward_seq", "'ticket_customer_reward_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_final_settlement_seq", "'ticket_final_settlement_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_investment_history_seq", "'ticket_investment_history_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_investment_seq", "'ticket_investment_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_material_seq", "'ticket_material_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_operation_seq", "'ticket_operation_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_progress_material_seq", "'ticket_progress_material_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_progress_reward_item_seq", "'ticket_progress_reward_item_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_progress_seq", "'ticket_progress_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_reward_item_seq", "'ticket_reward_item_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_sales_commitment_seq", "'ticket_sales_commitment_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ticket_seq", "'ticket_seq', '', '1', '5', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.user_assignment_seq", "'user_assignment_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.user_reset_ticket_seq", "'user_reset_ticket_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.user_role_seq", "'user_role_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.user_seq", "'user_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.vendor_seq", "'vendor_seq', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.ward_seq", "'ward_seq', '', '1', '100', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.zone_seq", "'zone_seq', '', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cbms.Authorization.Permissions.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "permission_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Cbms.Authorization.Roles.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "role_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RoleName")
                        .IsUnique()
                        .HasFilter("[RoleName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Cbms.Authorization.Roles.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "role_permission_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("Cbms.Authorization.UserResetTickets.UserResetTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "user_reset_ticket_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("UserResetTickets");
                });

            modelBuilder.Entity("Cbms.Authorization.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "user_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("AuthenticationSource")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("GetDate()");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cbms.Authorization.Users.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "user_role_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.AppLogs.AppLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AppLogs");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.AppSettings.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "app_setting_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Areas.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "area_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("SalesOrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Branches.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "branch_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("SalesOrgId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("SalesOrgId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Brands.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "brand_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "budget_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CycleId")
                        .HasColumnType("int");

                    b.Property<int>("InvestmentType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CycleId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.BudgetArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "budget_area_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("AllocateAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TempRemainAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempUsedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsedAmount")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("BudgetAreas");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.BudgetBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "budget_branch_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("AllocateAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TempRemainAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempUsedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsedAmount")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("BudgetBranches");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.BudgetZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "budget_zone_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("AllocateAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("RemainAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TempRemainAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TempUsedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UsedAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("BudgetZones");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Channels.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "channel_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("SalesOrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Consumers.Consumer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "consumer_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("OtpCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("OtpTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Consumers");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.CustomerLocations.CustomerLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "customer_location_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("CustomerLocations");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.CustomerSales.CustomerSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "customer_sale_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("varchar(4)")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("YearMonth")
                        .IsRequired()
                        .HasColumnType("varchar(6)")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("CustomerId", "YearMonth")
                        .IsUnique();

                    b.ToTable("CustomerSales");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.CustomerSalesItems.CustomerSalesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "customer_sales_item_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsUsing")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("QrCode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("QrCode")
                        .IsUnique()
                        .HasFilter("[QrCode] IS NOT NULL");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("CustomerSalesItems");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "customer_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<int?>("AsmStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ChannelCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Efficient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(null);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllowKeyShopRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsKeyShop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("KeyShopAuthCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("KeyShopRegisterStaffId")
                        .HasColumnType("int");

                    b.Property<int>("KeyShopStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<float>("Lat")
                        .HasColumnType("real");

                    b.Property<float>("Lng")
                        .HasColumnType("real");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("OtpCode")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("OtpTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int?>("RsmStaffId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesSupervisorStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WardId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("KeyShopRegisterStaffId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.HasIndex("WardId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Cycles.Cycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "cycle_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Cycles");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Geography.Districts.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "district_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Geography.Provinces.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "province_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Geography.Wards.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ward_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.InvestmentBranchSettings.InvestmentBranchSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "investment_branch_setting_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEditablePoint")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("InvestmentBranchSettings");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.InvestmentSettings.InvestmentSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "investmentSetting_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("AmountPerPoint")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BeginIssueDaysAfterCurrent")
                        .HasColumnType("int");

                    b.Property<bool>("CheckQrCodeBranch")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("DefaultPointsForTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(8,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("EndIssueDaysBeforeOperation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxInvestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaxInvestmentQueryMonths")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("InvestmentSetting");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.MaterialTypes.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "material_type_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("MaterialTypes");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Materials.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "material_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(true);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDesign")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Notifications.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "notification_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjectType")
                        .HasColumnType("int");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Notifications.NotificationBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "notification_branch_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("NotificationId");

                    b.ToTable("NotificationBranches");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Notifications.NotificationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "notification_user_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ViewDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationUsers");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "order_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("ConsumerName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("ConsumerPhone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TotalAvailablePoints")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("TotalPoints")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal>("TotalQuantity")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TotalUsedPoints")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("OrderNumber")
                        .IsUnique()
                        .HasFilter("[OrderNumber] IS NOT NULL");

                    b.HasIndex("TicketInvestmentId");

                    b.HasIndex("ConsumerPhone", "TotalAvailablePoints");

                    b.HasIndex("OrderDate", "TotalAvailablePoints");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Orders.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "order_detail_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Api")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<decimal>("AvailablePoints")
                        .HasColumnType("decimal(8,2)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("LineAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Points")
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("QrCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("SpoonCode")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UnitName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("UsedForTicket")
                        .HasColumnType("bit");

                    b.Property<decimal>("UsedPoints")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("QrCode");

                    b.HasIndex("SpoonCode")
                        .IsUnique()
                        .HasFilter("[SpoonCode] IS NOT NULL");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Orders.OrderTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "order_ticket_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("QrCode")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("TicketCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("OrderId");

                    b.HasIndex("QrCode");

                    b.HasIndex("TicketId");

                    b.ToTable("OrderTickets");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmClasses.PosmClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_class_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IncludeInfo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("PosmClasses");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_investment_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("ApproveNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("CommitmentAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentSalesAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerLocationId")
                        .HasColumnType("int");

                    b.Property<int>("CycleId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvestmentAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStaffId")
                        .HasColumnType("int");

                    b.Property<string>("SetupContact1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetupContact2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopPanelPhoto1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShopPanelPhoto2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShopPanelPhoto3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ShopPanelPhoto4")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("VisibilityCompetitorPhoto1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityCompetitorPhoto2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityCompetitorPhoto3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityCompetitorPhoto4")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityPhoto1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityPhoto2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityPhoto3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("VisibilityPhoto4")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("Code");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerLocationId");

                    b.HasIndex("CycleId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RegisterStaffId");

                    b.HasIndex("Status", "CreationTime");

                    b.ToTable("PosmInvestments");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmInvestmentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_investment_item_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime?>("AcceptanceDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("AcceptanceNote")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("AcceptancePhoto1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AcceptancePhoto2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AcceptancePhoto3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AcceptancePhoto4")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<decimal?>("ActualTotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ActualUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Depth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OperationDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("OperationLink")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OperationNote")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("OperationPhoto1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OperationPhoto2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OperationPhoto3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OperationPhoto4")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PanelOtherInfo")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("PanelProductLine")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("PanelShopAddress")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("PanelShopName")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("PanelShopPhone")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Photo1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Photo2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Photo3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Photo4")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("PosmCatalogId")
                        .HasColumnType("int");

                    b.Property<int>("PosmClassId")
                        .HasColumnType("int");

                    b.Property<int>("PosmInvestmentId")
                        .HasColumnType("int");

                    b.Property<int>("PosmItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("PosmValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("PrepareDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("PrepareNote")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<string>("RequestReason")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("RequestType")
                        .HasColumnType("int");

                    b.Property<DateTime>("SetupPlanDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal?>("SideWidth1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SideWidth2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Size")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdateCostReason")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(true);

                    b.Property<int?>("VendorId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("PosmCatalogId");

                    b.HasIndex("PosmClassId");

                    b.HasIndex("PosmInvestmentId");

                    b.HasIndex("PosmItemId");

                    b.HasIndex("VendorId");

                    b.ToTable("PosmInvestmentItems");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmInvestmentItemHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_investment_item_history_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PosmInvestmentItemId")
                        .HasColumnType("int");

                    b.Property<int>("PostInvestmentItemId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("PosmInvestmentItemId");

                    b.ToTable("PosmInvestmentItemHistories");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmSalesCommitment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_sales_commitment_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("PosmInvestmentId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("PosmInvestmentId");

                    b.ToTable("PosmSalesCommitments");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmItems.PosmCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_catalog_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("PosmItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("PosmItemId", "Code")
                        .IsUnique();

                    b.ToTable("PosmCatalogs");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmItems.PosmItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_item_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("CalcType")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("PosmClassId")
                        .HasColumnType("int");

                    b.Property<int>("UnitType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("PosmClassId");

                    b.ToTable("PosmItems");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmPrices.PosmPriceDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_price_detail")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("PosmItemId")
                        .HasColumnType("int");

                    b.Property<int>("PosmPriceHeaderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("PosmItemId")
                        .IsUnique();

                    b.HasIndex("PosmPriceHeaderId");

                    b.ToTable("PosmPriceDetails");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmPrices.PosmPriceHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "posm_price_header_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("PosmPriceHeaders");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductClasses.ProductClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "product_class_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("RewardCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RewardCode");

                    b.ToTable("ProductClasses");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductPoints.ProductPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "product_point_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Points")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPoints");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductPoints.ProductPointHistory", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Points")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.ToTable("ProductPointHistories");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductPrices.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrgId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesOrgId");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductUnits.ProductUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "product_unit_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "product_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("CaseUnit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PackSize")
                        .HasColumnType("int");

                    b.Property<int?>("ProductClassId")
                        .HasColumnType("int");

                    b.Property<int?>("SubProductClassId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProductClassId");

                    b.HasIndex("SubProductClassId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.RewardPackages.RewardBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "reward_branch_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("RewardPackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RewardPackageId");

                    b.ToTable("RewardBranches");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.RewardPackages.RewardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "reward_item_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentLink")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(true);

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductUnitId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RewardPackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductUnitId");

                    b.HasIndex("RewardPackageId", "Code")
                        .IsUnique();

                    b.ToTable("RewardItems");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.RewardPackages.RewardPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "reward_package_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("TotalTickets")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("RewardPackages");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.SalesOrgs.SalesOrg", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("ParentId");

                    b.ToTable("SalesOrgs");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Staffs.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "staff_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CreditPoint")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("SalesOrgId")
                        .HasColumnType("int");

                    b.Property<string>("StaffTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("StaffTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("SalesOrgId");

                    b.HasIndex("UserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.SubProductClasses.SubProductClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "sub_product_class_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("SubProductClasses");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ConsumerName")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ConsumerPhone")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastPrintUserId")
                        .HasColumnType("int");

                    b.Property<int>("PrintCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PrintDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LastPrintUserId");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketAcceptance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_acceptance_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("AcceptanceDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RemarkOfCompany")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("RemarkOfCustomerDevelopement")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("RemarkOfSales")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TicketInvestmentId")
                        .IsUnique();

                    b.HasIndex("UpdateUserId");

                    b.ToTable("TicketAcceptances");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketConsumerReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_customer_reward_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Photo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RewardItemId")
                        .HasColumnType("int");

                    b.Property<int>("RewardQuantity")
                        .HasColumnType("int");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RewardItemId");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("TicketConsumerRewards");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketConsumerRewardDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_customer_reward_detail_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketConsumerRewardId")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TicketConsumerRewardId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketConsumerRewardDetails");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketFinalSettlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_final_settlement_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("DecideUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("DecideUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TicketInvestmentId")
                        .IsUnique();

                    b.HasIndex("UpdateUserId");

                    b.ToTable("TicketFinalSettlements");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_investment_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("ActualSalesAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BuyBeginDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("BuyEndDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("CommitmentAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("CycleId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvestmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueTicketBeginDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime>("IssueTicketEndDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaterialAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<decimal>("PointsForTicket")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PrintTicketQuantity")
                        .HasColumnType("int");

                    b.Property<string>("RegisterNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegisterStaffId")
                        .HasColumnType("int");

                    b.Property<decimal>("RewardAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RewardPackageId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalesPlanAmount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("SmsTicketQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SurveyPhoto1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyPhoto2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyPhoto3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyPhoto4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyPhoto5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BudgetId");

                    b.HasIndex("Code");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CycleId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RegisterStaffId");

                    b.HasIndex("RewardPackageId");

                    b.HasIndex("Status", "CreationTime");

                    b.ToTable("TicketInvestments");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketInvestmentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_investment_history_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("TicketInvestmentHistories");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_material_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500)
                        .HasDefaultValue("");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegisterQuantity")
                        .HasColumnType("int");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("TicketMaterials");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_operation_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2(0)");

                    b.Property<string>("Photo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StockQuantity")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TicketInvestmentId")
                        .IsUnique();

                    b.HasIndex("UpdateUserId");

                    b.ToTable("TicketOperations");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_progress_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentPhoto1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPhoto2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPhoto3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPhoto4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentPhoto5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TicketInvestmentId");

                    b.HasIndex("UpdateUserId");

                    b.ToTable("TicketProgresses");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketProgressMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_progress_material_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReceived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSentDesign")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Photo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketProgressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("TicketProgressId");

                    b.ToTable("TicketProgressMaterials");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketProgressRewardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_progress_reward_item_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsReceived")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("RewardItemId")
                        .HasColumnType("int");

                    b.Property<int>("TicketProgressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RewardItemId");

                    b.HasIndex("TicketProgressId");

                    b.ToTable("TicketProgressRewardItems");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketRewardItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_reward_item_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RewardItemId")
                        .HasColumnType("int");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("RewardItemId");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("TicketRewardItems");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketSalesCommitment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "ticket_sales_commitment_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("TicketInvestmentId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("TicketInvestmentId");

                    b.ToTable("TicketSalesCommitments");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Users.UserAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "user_assignment_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<int>("SalesOrgId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.HasIndex("SalesOrgId");

                    b.HasIndex("UserId", "SalesOrgId")
                        .IsUnique();

                    b.ToTable("UserAssignments");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Vendors.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "vendor_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000)
                        .IsUnicode(true);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Zones.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "zone_seq")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("CreatorUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("datetime2(0)");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<int>("SalesOrgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("CreatorUserId");

                    b.HasIndex("LastModifierUserId");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("Cbms.Authorization.Permissions.Permission", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Authorization.Roles.Role", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Authorization.Roles.RolePermission", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Permissions.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Roles.Role", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Authorization.UserResetTickets.UserResetTicket", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Authorization.Users.User", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Authorization.Users.UserRole", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Roles.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.AppSettings.AppSetting", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Areas.Area", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Zones.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Branches.Branch", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Areas.Area", null)
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Channels.Channel", null)
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.SalesOrgs.SalesOrg", null)
                        .WithMany()
                        .HasForeignKey("SalesOrgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Zones.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Brands.Brand", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.Budget", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Cycles.Cycle", null)
                        .WithMany()
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.BudgetArea", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Areas.Area", null)
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Budgets.Budget", null)
                        .WithMany("Areas")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.BudgetBranch", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Branches.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Budgets.Budget", null)
                        .WithMany("Branches")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Budgets.BudgetZone", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Budgets.Budget", null)
                        .WithMany("Zones")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Zones.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Channels.Channel", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Consumers.Consumer", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.CustomerLocations.CustomerLocation", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.CustomerSales.CustomerSale", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.CustomerSalesItems.CustomerSalesItem", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany()
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Customers.Customer", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Areas.Area", null)
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Branches.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Geography.Districts.District", null)
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Staffs.Staff", null)
                        .WithMany()
                        .HasForeignKey("KeyShopRegisterStaffId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Geography.Provinces.Province", null)
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Geography.Wards.Ward", null)
                        .WithMany()
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Zones.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Cycles.Cycle", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Geography.Districts.District", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Geography.Provinces.Province", null)
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Geography.Provinces.Province", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Geography.Wards.Ward", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Geography.Districts.District", null)
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.InvestmentBranchSettings.InvestmentBranchSetting", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Branches.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.InvestmentSettings.InvestmentSetting", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.MaterialTypes.MaterialType", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Materials.Material", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.MaterialTypes.MaterialType", null)
                        .WithMany()
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Notifications.Notification", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Notifications.NotificationBranch", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Branches.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Notifications.Notification", null)
                        .WithMany("NotificationBranches")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Notifications.NotificationUser", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Notifications.Notification", null)
                        .WithMany("NotificationUsers")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Orders.Order", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Branches.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany()
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Orders.OrderDetail", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Orders.Order", null)
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Orders.OrderTicket", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Orders.Order", null)
                        .WithMany("OrderTickets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmClasses.PosmClass", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmInvestment", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Budgets.Budget", null)
                        .WithMany()
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.CustomerLocations.CustomerLocation", null)
                        .WithMany()
                        .HasForeignKey("CustomerLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Cycles.Cycle", null)
                        .WithMany()
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Staffs.Staff", null)
                        .WithMany()
                        .HasForeignKey("RegisterStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmInvestmentItem", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.PosmItems.PosmCatalog", null)
                        .WithMany()
                        .HasForeignKey("PosmCatalogId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.PosmClasses.PosmClass", null)
                        .WithMany()
                        .HasForeignKey("PosmClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.PosmInvestments.PosmInvestment", null)
                        .WithMany("Items")
                        .HasForeignKey("PosmInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.PosmItems.PosmItem", null)
                        .WithMany()
                        .HasForeignKey("PosmItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Vendors.Vendor", null)
                        .WithMany()
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmInvestmentItemHistory", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.PosmInvestments.PosmInvestmentItem", null)
                        .WithMany("Histories")
                        .HasForeignKey("PosmInvestmentItemId");
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmInvestments.PosmSalesCommitment", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.PosmInvestments.PosmInvestment", null)
                        .WithMany("SalesCommitments")
                        .HasForeignKey("PosmInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmItems.PosmCatalog", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.PosmItems.PosmItem", null)
                        .WithMany("PosmCatalogs")
                        .HasForeignKey("PosmItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmItems.PosmItem", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.PosmClasses.PosmClass", null)
                        .WithMany()
                        .HasForeignKey("PosmClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmPrices.PosmPriceDetail", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.PosmItems.PosmItem", null)
                        .WithMany()
                        .HasForeignKey("PosmItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.PosmPrices.PosmPriceHeader", null)
                        .WithMany("PosmPriceDetails")
                        .HasForeignKey("PosmPriceHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.PosmPrices.PosmPriceHeader", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductClasses.ProductClass", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductPoints.ProductPoint", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductPrices.ProductPrice", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.SalesOrgs.SalesOrg", null)
                        .WithMany()
                        .HasForeignKey("SalesOrgId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.ProductUnits.ProductUnit", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Products.Product", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Brands.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.ProductClasses.ProductClass", null)
                        .WithMany()
                        .HasForeignKey("ProductClassId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.SubProductClasses.SubProductClass", null)
                        .WithMany()
                        .HasForeignKey("SubProductClassId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.RewardPackages.RewardBranch", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Branches.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.RewardPackages.RewardPackage", null)
                        .WithMany("RewardBranches")
                        .HasForeignKey("RewardPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.RewardPackages.RewardItem", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Products.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.ProductUnits.ProductUnit", null)
                        .WithMany()
                        .HasForeignKey("ProductUnitId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.RewardPackages.RewardPackage", null)
                        .WithMany("RewardItems")
                        .HasForeignKey("RewardPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.RewardPackages.RewardPackage", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.SalesOrgs.SalesOrg", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Staffs.Staff", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Areas.Area", null)
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.SalesOrgs.SalesOrg", null)
                        .WithMany()
                        .HasForeignKey("SalesOrgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Zones.Zone", null)
                        .WithMany()
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.SubProductClasses.SubProductClass", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.Ticket", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastPrintUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("Tickets")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketAcceptance", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithOne("TicketAcceptance")
                        .HasForeignKey("Cbms.Kms.Domain.TicketInvestments.TicketAcceptance", "TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UpdateUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketConsumerReward", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.RewardPackages.RewardItem", null)
                        .WithMany()
                        .HasForeignKey("RewardItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("ConsumerRewards")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketConsumerRewardDetail", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketConsumerReward", null)
                        .WithMany("Details")
                        .HasForeignKey("TicketConsumerRewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.Ticket", null)
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketFinalSettlement", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("DecideUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithOne("TicketFinalSettlement")
                        .HasForeignKey("Cbms.Kms.Domain.TicketInvestments.TicketFinalSettlement", "TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UpdateUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", b =>
                {
                    b.HasOne("Cbms.Kms.Domain.Budgets.Budget", null)
                        .WithMany()
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Customers.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.Cycles.Cycle", null)
                        .WithMany()
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Staffs.Staff", null)
                        .WithMany()
                        .HasForeignKey("RegisterStaffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.RewardPackages.RewardPackage", null)
                        .WithMany()
                        .HasForeignKey("RewardPackageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketInvestmentHistory", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("Histories")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketMaterial", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Materials.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("Materials")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketOperation", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithOne("TicketOperation")
                        .HasForeignKey("Cbms.Kms.Domain.TicketInvestments.TicketOperation", "TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UpdateUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketProgress", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("Progresses")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UpdateUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketProgressMaterial", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.Materials.Material", null)
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketProgress", null)
                        .WithMany("Materials")
                        .HasForeignKey("TicketProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketProgressRewardItem", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.RewardPackages.RewardItem", null)
                        .WithMany()
                        .HasForeignKey("RewardItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketProgress", null)
                        .WithMany("RewardItems")
                        .HasForeignKey("TicketProgressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketRewardItem", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.RewardPackages.RewardItem", null)
                        .WithMany()
                        .HasForeignKey("RewardItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("RewardItems")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.TicketInvestments.TicketSalesCommitment", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.TicketInvestments.TicketInvestment", null)
                        .WithMany("SalesCommitments")
                        .HasForeignKey("TicketInvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Users.UserAssignment", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Kms.Domain.SalesOrgs.SalesOrg", null)
                        .WithMany()
                        .HasForeignKey("SalesOrgId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Vendors.Vendor", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Cbms.Kms.Domain.Zones.Zone", b =>
                {
                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Cbms.Authorization.Users.User", null)
                        .WithMany()
                        .HasForeignKey("LastModifierUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
